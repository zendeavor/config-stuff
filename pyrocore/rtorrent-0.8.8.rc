#############################################################################
# Standard PyroScope rTorrent Configuration
#
# Include this into your main "~/.rtorrent.rc" for 0.8.6 by adding...
#   system.method.insert = pyro.extended, value|const, 0
#   system.method.insert = pyro.bin_dir, string|const, 
#   system.method.insert = pyro.rtorrent_rc, string|const|private, "$cat=~/.pyroscope/rtorrent-,\"$system.client_version=\",.rc.default"
#   import = $pyro.rtorrent_rc=
#
# For 0.8.8 and up, use "method.insert" instead.
#
# Remove the ".default" if you want to change something (else your 
# changes get over-written on update).
#
# Set "pyro.extended" to 1 to activate rTorrent-PS features!
#
# Things marked with  are for version 0.8.7 only!
#

# Log extension switch setting
branch=pyro.extended=,print=rTorrent-PS\\\ features\\\ active!,print=rTorrent-PS\\\ features\\\ NOT\\\ active!

# COMMAND: Return startup time (can be used to calculate uptime)
method.insert = startup_time,value|const,$system.time=

# EVENTS: Timestamps
#   tm_loaded = time loaded into client
#   tm_started = time of *first* start
#   tm_completed = time of completion
method.insert = pyro.tm_started.now,simple|private,"d.custom.set=tm_started,$cat=$system.time= ;d.save_full_session="
method.set_key = event.download.resumed,time_stamp,"branch=d.custom=tm_started,false=,pyro.tm_started.now="
method.set_key = event.download.inserted_new,time_stamp,"d.custom.set=tm_loaded,$cat=$system.time= ;d.save_full_session="
method.set_key = event.download.finished,time_stamp,"d.custom.set=tm_completed,$cat=$system.time= ;d.save_full_session="

# EVENTS: Activation intervals
method.insert = pyro.activations.append,simple|private,"d.custom.set=activations,\"$cat=$d.custom=activations,$argument.0=,$system.time=\" ;d.save_full_session="
method.set_key = event.download.paused,activations,"pyro.activations.append=P"
method.set_key = event.download.resumed,activations,"pyro.activations.append=R"

# UI/VIEW: Default view for filtering results (bound to '^' key in rT-PS)
view.add = rtcontrol
view.filter = rtcontrol,false=
branch=pyro.extended=,"schedule = bind_rtcontrol,0,0,\"ui.bind_key=download_list,^,ui.current_view.set=rtcontrol\""

# UI/VIEW: Show active and incomplete torrents (in view #9) and update every 20 seconds
#   Items are grouped into complete, incomplete, and queued, in that order (rT-PS only).
#   Within each group, they're sorted by download and then upload speed.
branch=pyro.extended=,false=,"view.sort_current = active,greater=d.up.rate="
branch=pyro.extended=,"view.sort_current = active,\"compare=----,d.is_open=,d.complete=,d.down.rate=,d.up.rate=\""
schedule = filter_active,12,20,"view.filter = active,\"or={d.up.rate=,d.down.rate=,not=$d.complete=}\" ;view.sort=active"

# UI/VIEW: Show current messages (bound to '!' in rT-PS)
view.add = messages
view.filter = messages,d.message=
branch=pyro.extended=,false=,"view.sort_current = messages,less=d.message="
branch=pyro.extended=,"view.sort_current = messages,\"compare=,d.message=,d.name=\""
method.insert = ui.messages.show,simple,"ui.current_view.set=messages ;view.filter=messages,d.message= ;view.sort=messages ;print=$view.size=messages,\" message(s)!\""
branch=pyro.extended=,"schedule = bind_messages,0,0,\"ui.bind_key=download_list,!,ui.messages.show=\""

# UI/VIEW: Trackers (all items, sorted by tracker domain and name)
#          This will ONLY work if you use rT-PS!
branch=pyro.extended=,"view.add = trackers"
branch=pyro.extended=,"view.collapsed.toggle = trackers"
branch=pyro.extended=,"view.sort_new     = trackers,\"compare=,d.tracker_domain=,d.name=\""
branch=pyro.extended=,"view.sort_current = trackers,\"compare=,d.tracker_domain=,d.name=\""
branch=pyro.extended=,"schedule = bind_trackers,0,0,\"ui.bind_key=download_list,t,ui.current_view.set=trackers\""

# UI/VIEW: Bind "*" to toggle between collapsed and expanded display
branch=pyro.extended=,"schedule = bind_collapsed,0,0,\"ui.bind_key=download_list,*,view.collapsed.toggle=\""

# UI/CMD: Use rtcontrol filter (^X s=KEYWORD, ^X t=TRACKER, ^X f="FILTER")
method.insert = s,simple|private,"execute.nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,\"$cat=*,$argument.0=,*\""
method.insert = t,simple|private,"execute.nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,\"$cat=\\\"alias=\\\",$argument.0=\""
method.insert = f,simple|private,"execute.nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,$argument.0="

# UI/CMD: Housekeeping (delete item + data)
method.insert = purge,simple|private,"execute.nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",-q,--detach,--purge,--yes,\"$cat=hash=,$d.hash=\""
method.insert = cull,simple|private,"execute.nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",-q,--detach,--cull,--yes,\"$cat=hash=,$d.hash=\""

