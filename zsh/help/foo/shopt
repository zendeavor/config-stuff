shopt [-pqsu] [-o] [optname ...]
       Toggle the values of variables controlling optional shell behavior.  With no options, or with the -p option, a list
       of  all settable options is displayed, with an indication of whether or not each is set.  The -p option causes out‐
       put to be displayed in a form that may be reused as input.  Other options have the following meanings:
       -s     Enable (set) each optname.
       -u     Disable (unset) each optname.
       -q     Suppresses normal output (quiet mode); the return status indicates whether the optname is set or unset.   If
              multiple  optname  arguments  are given with -q, the return status is zero if all optnames are enabled; non-
              zero otherwise.
       -o     Restricts the values of optname to be those defined for the -o option to the set builtin.

       If either -s or -u is used with no optname arguments, the display is limited to those  options  which  are  set  or
       unset, respectively.  Unless otherwise noted, the shopt options are disabled (unset) by default.

       The  return  status  when listing options is zero if all optnames are enabled, non-zero otherwise.  When setting or
       unsetting options, the return status is zero unless an optname is not a valid shell option.

       The list of shopt options is:

       autocd  If set, a command name that is the name of a directory is executed as if it were the  argument  to  the  cd
               command.  This option is only used by interactive shells.
       cdable vars
               If  set, an argument to the cd builtin command that is not a directory is assumed to be the name of a vari‐
               able whose value is the directory to change to.
       cdspell If set, minor errors in the spelling of a directory component in a  cd  command  will  be  corrected.   The
               errors  checked  for are transposed characters, a missing character, and one character too many.  If a cor‐
               rection is found, the corrected file name is printed, and the command proceeds.  This option is  only  used
               by interactive shells.
       checkhash
               If set, bash checks that a command found in the hash table exists before trying to execute it.  If a hashed
               command no longer exists, a normal path search is performed.
       checkjobs
               If set, bash lists the status of any stopped and running jobs before exiting an interactive shell.  If  any
               jobs are running, this causes the exit to be deferred until a second exit is attempted without an interven‐
               ing command (see JOB CONTROL above).  The shell always postpones exiting if any jobs are stopped.
       checkwinsize
               If set, bash checks the window size after each command and, if necessary, updates the values of  LINES  and
               COLUMNS.
       cmdhist If  set, bash attempts to save all lines of a multiple-line command in the same history entry.  This allows
               easy re-editing of multi-line commands.
       compat31
               If set, bash changes its behavior to that of version 3.1 with respect to quoted arguments to the [[  condi‐
               tional command's =~ operator.
       compat32
               If  set, bash changes its behavior to that of version 3.2 with respect to locale-specific string comparison
               when using the [[ conditional command's < and > operators.  Bash versions prior to bash-4.1 use ASCII  col‐
               lation and strcmp(3); bash-4.1 and later use the current locale's collation sequence and strcoll(3).
       compat40
               If  set, bash changes its behavior to that of version 4.0 with respect to locale-specific string comparison
               when using the [[ conditional command's < and > operators (see previous item) and the effect of  interrupt‐
               ing a command list.
       compat41
               If set, bash, when in posix mode, treats a single quote in a double-quoted parameter expansion as a special
               character.  The single quotes must match (an even number) and the characters between the single quotes  are
               considered  quoted.   This  is  the  behavior of posix mode through version 4.1.  The default bash behavior
               remains as in previous versions.
       dirspell
               If set, bash attempts spelling correction on directory names during word completion if the  directory  name
               initially supplied does not exist.
       dotglob If set, bash includes filenames beginning with a `.' in the results of pathname expansion.
       execfail
               If set, a non-interactive shell will not exit if it cannot execute the file specified as an argument to the
               exec builtin command.  An interactive shell does not exit if exec fails.
       expand aliases
               If set, aliases are expanded as described above under ALIASES.  This  option  is  enabled  by  default  for
               interactive shells.
       extdebug
               If set, behavior intended for use by debuggers is enabled:
               1.     The  -F option to the declare builtin displays the source file name and line number corresponding to
                      each function name supplied as an argument.
               2.     If the command run by the DEBUG trap returns a non-zero value, the next command is skipped  and  not
                      executed.
               3.     If  the  command run by the DEBUG trap returns a value of 2, and the shell is executing in a subrou‐
                      tine (a shell function or a shell script executed by the . or source builtins), a call to return  is
                      simulated.
               4.     BASH ARGC and BASH ARGV are updated as described in their descriptions above.
               5.     Function  tracing  is  enabled:  command substitution, shell functions, and subshells invoked with (
                      command ) inherit the DEBUG and RETURN traps.
               6.     Error tracing is enabled:  command substitution, shell functions, and subshells invoked with (  com‐
                      mand ) inherit the ERR trap.
       extglob If set, the extended pattern matching features described above under Pathname Expansion are enabled.
       extquote
               If  set,  $'string'  and  $"string"  quoting is performed within ${parameter} expansions enclosed in double
               quotes.  This option is enabled by default.
       failglob
               If set, patterns which fail to match filenames during pathname expansion result in an expansion error.
       force fignore
               If set, the suffixes specified by the FIGNORE shell variable cause words to be ignored when performing word
               completion  even  if  the ignored words are the only possible completions.  See SHELL VARIABLES above for a
               description of FIGNORE.  This option is enabled by default.
       globstar
               If set, the pattern ** used in a pathname expansion context will match all files and zero or more  directo‐
               ries and subdirectories.  If the pattern is followed by a /, only directories and subdirectories match.
       gnu errfmt
               If set, shell error messages are written in the standard GNU error message format.
       histappend
               If set, the history list is appended to the file named by the value of the HISTFILE variable when the shell
               exits, rather than overwriting the file.
       histreedit
               If set, and readline is being used, a user is given the opportunity to re-edit a failed  history  substitu‐
               tion.
       histverify
               If  set,  and readline is being used, the results of history substitution are not immediately passed to the
               shell parser.  Instead, the resulting line is loaded into the readline  editing  buffer,  allowing  further
               modification.
       hostcomplete
               If set, and readline is being used, bash will attempt to perform hostname completion when a word containing
               a @ is being completed (see Completing under READLINE above).  This is enabled by default.
       huponexit
               If set, bash will send SIGHUP to all jobs when an interactive login shell exits.
       interactive comments
               If set, allow a word beginning with # to cause that word and all remaining characters on that  line  to  be
               ignored in an interactive shell (see COMMENTS above).  This option is enabled by default.
       lastpipe
               If  set,  and  job control is not active, the shell runs the last command of a pipeline not executed in the
               background in the current shell environment.
       lithist If set, and the cmdhist option is enabled, multi-line commands are saved to the history with embedded  new‐
               lines rather than using semicolon separators where possible.
       login shell
               The  shell sets this option if it is started as a login shell (see INVOCATION above).  The value may not be
               changed.
       mailwarn
               If set, and a file that bash is checking for mail has been accessed since the last time it was checked, the
               message ``The mail in mailfile has been read'' is displayed.
       no empty cmd completion
               If  set, and readline is being used, bash will not attempt to search the PATH for possible completions when
               completion is attempted on an empty line.
       nocaseglob
               If set, bash matches filenames in a case-insensitive fashion when performing pathname expansion (see  Path‐
               name Expansion above).
       nocasematch
               If  set,  bash matches patterns in a case-insensitive fashion when performing matching while executing case
               or [[ conditional commands.
       nullglob
               If set, bash allows patterns which match no files (see Pathname  Expansion  above)  to  expand  to  a  null
               string, rather than themselves.
       progcomp
               If  set,  the  programmable  completion  facilities  (see Programmable Completion above) are enabled.  This
               option is enabled by default.
       promptvars
               If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion,  and  quote
               removal after being expanded as described in PROMPTING above.  This option is enabled by default.
       restricted shell
               The shell sets this option if it is started in restricted mode (see RESTRICTED SHELL below).  The value may
               not be changed.  This is not reset when the startup files are executed, allowing the startup files to  dis‐
               cover whether or not a shell is restricted.
       shift verbose
               If  set,  the  shift  builtin prints an error message when the shift count exceeds the number of positional
               parameters.
       sourcepath
               If set, the source (.) builtin uses the value of PATH to find the directory containing the file supplied as
               an argument.  This option is enabled by default.
       xpg echo
               If set, the echo builtin expands backslash-escape sequences by default.
